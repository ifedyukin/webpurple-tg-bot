const { DELAULT_LANG } = require('../constants');

const COMMANDS = {
  start: {
    langs: {
      'en-US': '/start',
    },
  },
  contribute: {
    emoji: '‚ô•Ô∏è',
    langs: {
      ru: '–°–¥–µ–ª–∞—Ç—å –≤–∫–ª–∞–¥',
      'en-US': 'Contribute',
    },
  },
  community: {
    emoji: 'ü§ù',
    langs: {
      ru: '–°–æ–æ–±—â–µ—Å—Ç–≤–æ',
      'en-US': 'Community',
    },
  },
  lastNews: {
    emoji: 'üìù',
    langs: {
      ru: '–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏',
      'en-US': 'Last news',
    },
  },
  nextEvent: {
    emoji: 'üìÜ',
    langs: {
      ru: '–°–ª–µ–¥—É—é—â–µ–µ —Å–æ–±—ã—Ç–∏–µ',
      'en-US': 'Next event',
    },
  },
  subscribe: {
    emoji: 'üîî',
    langs: {
      ru: '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è',
      'en-US': 'Subscribe',
    },
  },
  unsubscribe: {
    emoji: 'üîï',
    langs: {
      ru: '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è',
      'en-US': 'Unsubscribe',
    },
  },
  settings: {
    emoji: '‚öôÔ∏è',
    langs: {
      ru: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏',
      'en-US': 'Settings',
    },
  },
  saveSettings: {
    emoji: 'üíæ',
    langs: {
      ru: '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
      'en-US': 'Save',
    },
  },
};

const getCommandByLang = lang => (command) => {
  const text = COMMANDS[command];
  const label = text.langs[lang] || text.langs[DELAULT_LANG];
  const emoji = text.emoji ? `${text.emoji} ` : '';
  return emoji + label;
};

const expressions = Object.entries(COMMANDS)
  .reduce((acc, [name, text]) => ({
    ...acc,
    [name]: new RegExp(`${text.emoji ? `${text.emoji} ` : ''}${Object.values(text.langs).join('|')}`),
  }), {
    changeSettings: new RegExp('[‚ùå|‚úÖ] (.+)', 'i'),
  });

module.exports = {
  expressions,
  getCommandByLang,
};

